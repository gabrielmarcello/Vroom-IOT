[
    {
        "id": "9b03f48430195a1c",
        "type": "tab",
        "label": "Dashboard Eventos Motos",
        "disabled": false
    },
    {
        "id": "3aa602797622144f",
        "type": "mqtt in",
        "z": "9b03f48430195a1c",
        "name": "MQTT Status LED",
        "topic": "fiap/iot/led/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3a51b406bd7f7684",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "db61ca201fafa69d"
            ]
        ]
    },
    {
        "id": "db61ca201fafa69d",
        "type": "function",
        "z": "9b03f48430195a1c",
        "name": "Converter e adicionar evento",
        "func": "// Converte payload para objeto JSON\nlet payload = msg.payload;\nif (typeof payload === 'string') {\n    try {\n        payload = JSON.parse(payload);\n    } catch(e) {\n        node.warn('JSON inválido: ' + payload);\n        return null;\n    }\n}\n\n// Adiciona timestamp local\nlet now = new Date();\npayload.timestamp = now.getFullYear() + '-' + String(now.getMonth()+1).padStart(2,'0') + '-' + String(now.getDate()).padStart(2,'0') + ' ' + String(now.getHours()).padStart(2,'0') + ':' + String(now.getMinutes()).padStart(2,'0') + ':' + String(now.getSeconds()).padStart(2,'0');\n\n// Garante campos obrigatórios\npayload.id_tag = payload.id_tag || '';\npayload.led_on = payload.led_on !== undefined ? payload.led_on : '';\npayload.problema = payload.problema || '';\npayload.color = payload.color !== undefined ? payload.color : '';\n\n// Recupera tabela atual e adiciona novo evento\nlet table = flow.get('event_table') || [];\ntable.push(payload);\nflow.set('event_table', table);\n\nmsg.payload = table;\nreturn msg;",
        "outputs": 1,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "f2e29e789424121a",
                "0c628b4d7bcecf62"
            ]
        ]
    },
    {
        "id": "f2e29e789424121a",
        "type": "function",
        "z": "9b03f48430195a1c",
        "name": "Mapear número para cor",
        "func": "// Mapear números de cor para nomes\nconst cores = {\n    0: 'Vermelho',\n    1: 'Verde',\n    2: 'Azul',\n    3: 'Amarelo',\n    4: 'Laranja',\n    5: 'Vinho',\n    6: 'Roxo'\n};\n\nmsg.payload = msg.payload.map(evento => ({\n    ...evento,\n    color: (evento.color !== undefined && cores[evento.color] !== undefined) ? cores[evento.color] : 'Desligado'\n}));\n\nreturn msg;",
        "outputs": 1,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "15ad9bc4fabc207f"
            ]
        ]
    },
    {
        "id": "15ad9bc4fabc207f",
        "type": "ui_table",
        "z": "9b03f48430195a1c",
        "group": "aa4cef9b46366334",
        "name": "Tabela Eventos",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "center"
            },
            {
                "field": "id_tag",
                "title": "ID Tag",
                "width": "",
                "align": "center"
            },
            {
                "field": "led_on",
                "title": "LED",
                "width": "",
                "align": "center"
            },
            {
                "field": "problema",
                "title": "Problema",
                "width": "",
                "align": "center"
            },
            {
                "field": "color",
                "title": "Cor",
                "width": "",
                "align": "center"
            }
        ],
        "outputs": 0,
        "x": 880,
        "y": 160,
        "wires": []
    },
    {
        "id": "0c628b4d7bcecf62",
        "type": "file",
        "z": "9b03f48430195a1c",
        "name": "Salvar histórico JSON",
        "filename": "historico_mottu.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 640,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3a51b406bd7f7684",
        "type": "mqtt-broker",
        "name": "HiveMQ Broker",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "node_red_ui",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 15,
        "cleansession": true,
        "autoUnsubscribe": true
    },
    {
        "id": "aa4cef9b46366334",
        "type": "ui_group",
        "name": "Eventos Motos",
        "tab": "95e3efc2470830f4",
        "order": 1,
        "width": 12,
        "collapse": false
    },
    {
        "id": "95e3efc2470830f4",
        "type": "ui_tab",
        "name": "Eventos Motos",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d6959b8a83ddc103",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-node-ui-table": "0.4.5",
            "node-red-dashboard": "3.6.6"
        }
    }
]